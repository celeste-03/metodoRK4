{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":""},{"location":"#introduccion","title":"Introducci\u00f3n","text":"<p>Este proyecto documenta el m\u00e9todo de Runge-Kutta de cuarto orden (RK4) para resolver ecuaciones diferenciales ordinarias. En este caso, aplicamos el m\u00e9todo al problema din\u00e1mico de valor inicial:</p> \\[ \\frac{dy}{dt} = f(t, y); \\quad y(t_0) = y_0 \\]"},{"location":"explanation/","title":"Explicaci\u00f3n del M\u00e9todo RK4","text":"<p>El m\u00e9todo RK4 es un m\u00e9todo num\u00e9rico para aproximar soluciones de ecuaciones diferenciales ordinarias. Calcula cuatro inclinaciones intermedias para mejorar la precisi\u00f3n de la soluci\u00f3n en cada paso:</p>"},{"location":"explanation/#explicacion-del-metodo-rk4_1","title":"Explicaci\u00f3n del M\u00e9todo RK4","text":"<p>El m\u00e9todo RK4 es un m\u00e9todo num\u00e9rico para aproximar soluciones de ecuaciones diferenciales ordinarias. Calcula cuatro inclinaciones intermedias para mejorar la precisi\u00f3n de la soluci\u00f3n en cada paso:</p> \\[ k_1 = h f(t_n, y_n) \\] \\[ k_2 = h f\\left(t_n + \\frac{h}{2}, y_n + \\frac{k_1}{2}\\right) \\] \\[ k_3 = h f\\left(t_n + \\frac{h}{2}, y_n + \\frac{k_2}{2}\\right) \\] \\[ k_4 = h f(t_n + h, y_n + k_3) \\] <p>Finalmente, la soluci\u00f3n en el siguiente paso es:</p> \\[ y_{n+1} = y_n + \\frac{1}{6}(k_1 + 2k_2 + 2k_3 + k_4) \\]"},{"location":"reference/","title":"Referencia de Funciones","text":""},{"location":"reference/#dyn_generatort-y","title":"<code>dyn_generator(t, y)</code>","text":"<p>Genera la din\u00e1mica para el sistema dado.</p>"},{"location":"reference/#argumentos","title":"Argumentos","text":"<ul> <li><code>t</code> (float): Tiempo actual.</li> <li><code>y</code> (ndarray): Estado actual del sistema.</li> </ul>"},{"location":"reference/#retorno","title":"Retorno","text":"<ul> <li><code>ndarray</code>: Derivada del estado.</li> </ul>"},{"location":"reference/#ejemplo-de-uso","title":"Ejemplo de uso","text":"<pre><code>dy_dt = dyn_generator(0, np.array([1, 0]))\n</code></pre>"},{"location":"tutorials/","title":"Ejemplo de uso","text":"<p>A continuaci\u00f3n, se muestra un ejemplo de uso del m\u00e9todo RK4 aplicado a la ecuaci\u00f3n \\( \\frac{dy}{dt} = -i[O, y(t)] \\):</p>"},{"location":"tutorials/#ejemplo-de-uso-del-metodo-rk4","title":"Ejemplo de uso del M\u00e9todo RK4","text":"<p>A continuaci\u00f3n, se muestra un ejemplo de uso del m\u00e9todo RK4 aplicado a la ecuaci\u00f3n \\( \\frac{dy}{dt} = -i[O, y(t)] \\):</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\ndef rk4(f, y0, t0, h, n):\n    t = t0\n    y = y0\n    for i in range(n):\n        k1 = h * f(t, y)\n        k2 = h * f(t + h/2, y + k1/2)\n        k3 = h * f(t + h/2, y + k2/2)\n        k4 = h * f(t + h, y + k3)\n        y += (k1 + 2*k2 + 2*k3 + k4) / 6\n        t += h\n    return y\n\n# Definir la matriz O y el estado inicial\nO = np.array([[0, 1], [-1, 0]])\ny0 = np.array([1, 0], dtype=complex)\n\n# Calcular la soluci\u00f3n utilizando rk4\ny = rk4(lambda t, y: -1j * O @ y, y0, 0, 0.01, 100)\n\n# Guardar la gr\u00e1fica como imagen\nplt.plot(np.real(y), np.imag(y))\nplt.xlabel('Re(y)')\nplt.ylabel('Im(y)')\nplt.title('M\u00e9todo RK4 - Soluci\u00f3n num\u00e9rica')\nplt.savefig('grafica_metodo_rk4.png')  # Guardar la gr\u00e1fica\nplt.close()  # Cerrar la figura\n</code></pre>"}]}